{"version":3,"file":"static/js/4.235d844e.chunk.js","mappings":"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","sources":["webpack://task-pro/./src/pages/HomePage/HomePage.module.css?5baa","webpack://task-pro/./src/components/Modals/ModalBody.module.css?f007","webpack://task-pro/./src/components/Forms/BoardForm/BoardForm.module.css?b03b","components/Forms/BoardForm/NewBoardForm.jsx","components/Forms/BoardForm/EditBoardForm.jsx","webpack://task-pro/./src/components/Forms/Column/ColumnForm.module.css?42aa","components/Forms/Column/AddColumnForm.jsx","components/Forms/Column/EditColumnForm.jsx","webpack://task-pro/./src/components/Forms/Help/NeedHelpForm.module.css?6d36","services/needHelpService.js","redux/needHelp/needHelpThunks.js","components/Forms/Help/NeedHelpForm.jsx","components/Forms/UserForm/ImgInput.jsx","webpack://task-pro/./src/components/Forms/UserForm/UserForm.module.css?c4e1","components/Forms/UserForm/UserForm.jsx","webpack://task-pro/./src/components/Calendar/Calendar.module.css?a426","components/Calendar/Calendar.jsx","webpack://task-pro/./src/components/Forms/CardForm/AddCard.module.css?320f","components/Forms/CardForm/AddCard.jsx","components/Forms/CardForm/EditCard.jsx","webpack://task-pro/./src/components/Warning/Warning.module.css?b328","components/Warning/WarningList.jsx","components/Warning/WarningDell.jsx","components/Warning/WarningLogout.jsx","components/Modals/ModalBody.jsx","webpack://task-pro/./src/components/Sidebar/Sidebar.module.css?6ffa","webpack://task-pro/./src/components/Sidebar/Board/Board.module.css?228b","components/Sidebar/Board/Board.jsx","components/Sidebar/Sidebar.jsx","webpack://task-pro/./src/components/DefaultBoard/DefaultBoard.module.css?a9e5","components/DefaultBoard/DefaultBoard.jsx","webpack://task-pro/./src/components/Navigation/Navigation.module.css?4bf2","webpack://task-pro/./src/components/UserMenu/UserMenu.module.css?1b0e","components/UserMenu/UserMenu.jsx","webpack://task-pro/./src/components/ThemeSelect/ThemeSelect.module.css?c8b0","components/ThemeSelect/ThemePopup.jsx","components/ThemeSelect/ThemeSelect.jsx","components/Navigation/Navigation.jsx","pages/HomePage/HomePage.jsx","redux/board/selectors.js","utils/priorityObject.js","images/card/background-icons|sync|/^/.//.*/.png$"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"HomePage_main__OiWfi\",\"mainPage\":\"HomePage_mainPage__BoNlQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalBackdrop\":\"ModalBody_modalBackdrop__KSTDi\",\"modalBody\":\"ModalBody_modalBody__z2P-b\",\"testModalBody\":\"ModalBody_testModalBody__Lae1F\",\"formWrap\":\"ModalBody_formWrap__XSeU3\",\"closeButton\":\"ModalBody_closeButton__dL1Kr\"};","// extracted by mini-css-extract-plugin\nexport default {\"formTitle\":\"BoardForm_formTitle__usegY\",\"formInput\":\"BoardForm_formInput__BAA1o\",\"iconsForm\":\"BoardForm_iconsForm__Vh1US\",\"iconsTitle\":\"BoardForm_iconsTitle__F+0eo\",\"iconsWrap\":\"BoardForm_iconsWrap__mqvgp\",\"bgIconsWrap\":\"BoardForm_bgIconsWrap__QP4eA\",\"iconInput\":\"BoardForm_iconInput__pMRLe\",\"container\":\"BoardForm_container__u+mXS\",\"bgContainer\":\"BoardForm_bgContainer__pPJAN\",\"checkmark\":\"BoardForm_checkmark__O0h40\",\"bgCheckmark\":\"BoardForm_bgCheckmark__M+lA3\",\"formButton\":\"BoardForm_formButton__z8EY6\",\"iconWrap\":\"BoardForm_iconWrap__7hZa6\",\"buttonIcon\":\"BoardForm_buttonIcon__biGbW\"};","import css from './BoardForm.module.css';\nimport { useState } from 'react';\nimport { closeModal } from '../../../redux/modalSlice';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addBoard } from '../../../redux/board/boardThunks';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\n\nexport const NewBoardForm = () => {\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const [iconValue, setIconValue] = useState('four-circles');\n  const [bgValue, setBgValue] = useState('1');\n  const boards = useSelector(state => state.boards.boards)\n  const {t} = useTranslation()\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleIconChange = e => {\n    setIconValue(e.target.value);\n  };\n\n  const handleBgChange = e => {\n    setBgValue(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    if(boards.find(brd => brd.name === title)){\n      toast.error(\n        'Board with this name already exists'\n      );\n      return\n    }\n\n    const newBoard = {\n      name: title,\n      icon: iconValue,\n      background: bgValue,\n    };\n\n    dispatch(addBoard(newBoard));\n    e.target.reset();\n    dispatch(closeModal());\n  };\n\n  const icValues = [\n    'four-circles',\n    'eye',\n    'star',\n    'loading',\n    'puzzle',\n    'container',\n    'logo',\n    'hexagon',\n  ];\n  const bgValues = [];\n\n  for (let i = 1; i <= 16; i++) {\n    bgValues.push(`${i}`);\n  }\n\n  return (\n    <>\n      <h2 className={css.formTitle}>{t(\"form.new-title\")}</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n        <label htmlFor=\"name\">\n          <input\n            autoComplete=\"false\"\n            placeholder={t(\"form.new-placeholder\")}\n            onChange={e => handleChange(e)}\n            value={title}\n            className={css.formInput}\n            type=\"text\"\n            name=\"title\"\n            required\n          />\n        </label>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>{t(\"form.new-icon\")}</legend>\n          <div className={css.iconsWrap}>\n            {icValues.map(ic => {\n              return (\n                <label key={ic} className={css.container}>\n                  <input\n                    onChange={e => handleIconChange(e)}\n                    type=\"radio\"\n                    id={ic}\n                    name=\"icon\"\n                    value={ic}\n                    required\n                    checked={iconValue === ic}\n                  />\n                  <svg className={css.checkmark}>\n                    <use href={`${sprite}#icon-${ic}`} />\n                  </svg>\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>{t(\"form.new-bg\")}</legend>\n          <div className={css.bgIconsWrap}>\n            {bgValues.map(bg => {\n              return (\n                <label key={bg} className={css.bgContainer}>\n                  <input\n                    onChange={e => handleBgChange(e)}\n                    type=\"radio\"\n                    id={bg}\n                    name=\"bg\"\n                    value={bg}\n                    required\n                    checked={bgValue === bg}\n                  />\n                  <img\n                    className={css.bgCheckmark}\n                    width=\"28\"\n                    height=\"28\"\n                    src={require(`../../../images/card/background-icons/${bg}.png`)}\n                    alt=\"\"\n                  />\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          {t('form.cr-brd-btn')}\n        </button>\n      </form>\n    </>\n  );\n};\n","import css from './BoardForm.module.css';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateBoard } from '../../../redux/board/boardThunks';\nimport { closeModal } from '../../../redux/modalSlice';\nimport sprite from '../../../images/sprite.svg';\nimport { useTranslation } from 'react-i18next';\n\nexport const EditBoardForm = () => {\n  const { selectedElId } = useSelector(state => state.modal);\n  const stateBoards = useSelector(state => state.boards.boards)\n  const currentBoard = stateBoards.find(brd=> brd._id === selectedElId)\n  const [title, setTitle] = useState(currentBoard.name);\n  const [iconValue, setIconValue] = useState(currentBoard.icon);\n  const [bgValue, setBgValue] = useState(currentBoard.background);\n  const {t} = useTranslation()\n\n\n  const dispatch = useDispatch()\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleIconChange = e => {\n    setIconValue(e.target.value);\n  };\n\n  const handleBgChange = e => {\n    setBgValue(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    const brdId = currentBoard._id\n    e.preventDefault();\n    const updatedBoard= {\n      name: title,\n      icon: iconValue,\n      background: bgValue\n    }\n    dispatch(updateBoard({id: brdId, updatedBoard}))\n    dispatch(closeModal())\n  };\n\n  const icValues = [\n    'four-circles',\n    'eye',\n    'star',\n    'loading',\n    'puzzle',\n    'container',\n    'logo',\n    'hexagon',\n  ];\n  const bgValues = [];\n\n  for (let i = 1; i <= 16; i++) {\n    bgValues.push(`${i}`);\n  }\n\n  return (\n    <>\n    <h2 className={css.formTitle}>{t(\"form.edit-title\")}</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n        <label htmlFor=\"name\">\n          <input\n            autoComplete=\"false\"\n            placeholder={t(\"form.new-placeholder\")}\n            onChange={e => handleChange(e)}\n            value={title}\n            className={css.formInput}\n            type=\"text\"\n            name=\"title\"\n            required\n          />\n        </label>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>{t(\"form.new-icon\")}</legend>\n          <div className={css.iconsWrap}>\n            {icValues.map(ic => {\n              return (\n                <label key={ic} className={css.container}>\n                  <input\n                    onChange={e => handleIconChange(e)}\n                    type=\"radio\"\n                    id={ic}\n                    name=\"icon\"\n                    value={ic}\n                    checked={iconValue === ic}\n                  />\n                  <svg className={css.checkmark}>\n                    <use href={`${sprite}#icon-${ic}`} />\n                  </svg>\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>{t(\"form.new-bg\")}</legend>\n          <div className={css.bgIconsWrap}>\n            {bgValues.map(bg => {\n              return (\n                <label key={bg} className={css.bgContainer}>\n                  <input\n                    onChange={e => handleBgChange(e)}\n                    type=\"radio\"\n                    id={`bg${bg}`}\n                    name=\"bg\"\n                    value={bg}\n                    checked={bgValue === bg}\n                  />\n                  <img\n                    className={css.bgCheckmark}\n                    width=\"20\"\n                    height=\"20\"\n                    src={require(`../../../images/card/background-icons/${bg}.png`)}\n                    alt=\"\"\n                  />\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          {t('form.edt-brd-btn')}\n        </button>\n      </form>\n    </>\n  );\n\n  \n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formTitle\":\"ColumnForm_formTitle__brkqM\",\"formInput\":\"ColumnForm_formInput__TwvzG\",\"iconsForm\":\"ColumnForm_iconsForm__czjpY\",\"iconsTitle\":\"ColumnForm_iconsTitle__9b450\",\"iconsWrap\":\"ColumnForm_iconsWrap__xwppe\",\"bgIconsWrap\":\"ColumnForm_bgIconsWrap__9BKMJ\",\"iconInput\":\"ColumnForm_iconInput__gaYW9\",\"container\":\"ColumnForm_container__tcg6N\",\"bgContainer\":\"ColumnForm_bgContainer__+9VXy\",\"checkmark\":\"ColumnForm_checkmark__0iObs\",\"bgCheckmark\":\"ColumnForm_bgCheckmark__SmlZ-\",\"formButton\":\"ColumnForm_formButton__SgVLS\",\"iconWrap\":\"ColumnForm_iconWrap__duW4E\",\"buttonIcon\":\"ColumnForm_buttonIcon__vdyo9\"};","import css from './ColumnForm.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport sprite from '../../../images/sprite.svg';\nimport { postColumn } from '../../../redux/column/columnThunk';\nimport { closeModal } from '../../../redux/modalSlice';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\n\nexport const AddColumnForm= () => {\n  const [title, setTitle] = useState('');\n  const currentBoardId = useSelector(state => state.boards.currentBoardId)\n  const columns = useSelector(state => state.columns.columns)\n  const dispatch = useDispatch()\n  const {t} = useTranslation()\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    if(columns.find(col => col.title === title)){\n      toast.error(\n        'Column with this title already exists'\n      );\n      return\n    }\n    dispatch(postColumn({title: title, boardId: currentBoardId}))\n    dispatch(closeModal());\n  };\n\n  return (\n    <>\n      <h2 className={css.formTitle}>{t('form.clm-add')}</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n        <label htmlFor=\"name\">\n          <input\n            autoComplete=\"false\"\n            placeholder={t('form.new-placeholder')}\n            onChange={e => handleChange(e)}\n            value={title}\n            className={css.formInput}\n            type=\"text\"\n            name=\"title\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          {t('form.add-crd-btn')}\n        </button>\n      </form>\n    </>\n  );\n};\n","import css from './ColumnForm.module.css';\nimport { useState } from 'react';\nimport sprite from '../../../images/sprite.svg';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateColumn } from '../../../redux/column/columnThunk';\nimport { closeModal } from '../../../redux/modalSlice';\nimport { useTranslation } from 'react-i18next';\n\nexport const EditColumnForm = () => {\n  const { selectedElId } = useSelector(state => state.modal);\n  const stateColumns = useSelector(state => state.columns.columns)\n  const currentColumn = stateColumns.find(col=> col._id === selectedElId)\n  \n  const [title, setTitle] = useState(currentColumn.title);\n  const dispatch = useDispatch()\n  const {t} = useTranslation()\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    dispatch(updateColumn({id: selectedElId, newColumn: {title}}))\n    dispatch(closeModal())\n  };\n\n  return (\n    <>\n    <h2 className={css.formTitle}>{t(\"form.clm-edt\")}</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n      <label htmlFor=\"name\">\n          <input\n            autoComplete=\"false\"\n            placeholder={t(\"form.new-placeholder\")}\n            onChange={e => handleChange(e)}\n            value={title}\n            className={css.formInput}\n            type=\"text\"\n            name=\"title\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          {t(\"form.edt-crd-btn\")}\n        </button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formTitle\":\"NeedHelpForm_formTitle__sljth\",\"formInput\":\"NeedHelpForm_formInput__aVFhD\",\"commentInput\":\"NeedHelpForm_commentInput__niNh7\",\"iconsForm\":\"NeedHelpForm_iconsForm__lWWH+\",\"iconsTitle\":\"NeedHelpForm_iconsTitle__jyG0n\",\"iconsWrap\":\"NeedHelpForm_iconsWrap__ACPv5\",\"bgIconsWrap\":\"NeedHelpForm_bgIconsWrap__J5v05\",\"iconInput\":\"NeedHelpForm_iconInput__dJrxH\",\"container\":\"NeedHelpForm_container__DDitB\",\"bgContainer\":\"NeedHelpForm_bgContainer__6tAKR\",\"checkmark\":\"NeedHelpForm_checkmark__EFSAN\",\"bgCheckmark\":\"NeedHelpForm_bgCheckmark__OcOlh\",\"formButton\":\"NeedHelpForm_formButton__EmpLK\",\"iconWrap\":\"NeedHelpForm_iconWrap__iFh9P\",\"buttonIcon\":\"NeedHelpForm_buttonIcon__HFz9F\"};","import { instance } from './authService';\n\nexport const needHelp = async body => {\n  const { data } = await instance.post('/users/help', body);\n  return data;\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { needHelp } from 'services/needHelpService';\n\nexport const needHelpAction = createAsyncThunk(\n  'help/needHelp',\n  async ({ email, comment }, thunkAPI) => {\n    try {\n      const data = await needHelp({\n        email,\n        comment,\n      });\n      toast.success('Your message was successfully send');\n      return data;\n    } catch (error) {\n      toast.error(\n        'Oops! Something went wrong! Please try reloading this page!'\n      );\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n","import { useDispatch } from 'react-redux';\nimport css from './NeedHelpForm.module.css';\nimport { useState } from 'react';\nimport { needHelpAction } from '../../../redux/needHelp/needHelpThunks';\nimport { closeModal } from '../../../redux/modalSlice';\nimport { useTranslation } from 'react-i18next';\n\n// case 'need-help':\n// return <NeedHelpForm />; при рендері у ModalBody спінер додати\n\nexport const NeedHelpForm = () => {\n  const [email, setEmail] = useState('');\n  const [comment, setComment] = useState('');\n  const {t} = useTranslation()\n\n  const dispatch = useDispatch();\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleCommentChange = e => {\n    setComment(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n\n    if (email.trim() === '' || comment.trim() === '') return;\n\n    try {\n      dispatch(needHelpAction({ email, comment }));\n    } catch (error) {\n      console.log(error);\n    }\n\n    setEmail('');\n    setComment('');\n    dispatch(closeModal())\n  };\n\n  return (\n    <>\n    <h2 className={css.formTitle}>{t('form.help')}</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n        <label htmlFor=\"email\">\n          <input\n            autoComplete=\"false\"\n            placeholder=\"Email\"\n            onChange={e => handleEmailChange(e)}\n            value={email}\n            className={css.formInput}\n            type=\"email\"\n            name=\"email\"\n            required\n          />\n        </label>\n        <label htmlFor=\"comment\">\n          <textarea\n            placeholder={t('form.help-com')}\n            onChange={e => handleCommentChange(e)}\n            value={comment}\n            className={css.commentInput}\n            name=\"comment\"\n          />\n        </label>\n        <button type=\"submit\" className={css.formButton}>\n        {t('form.send-btn')}\n        </button>\n      </form>\n    </>\n  );\n};\n","import { useFormikContext } from 'formik';\n\nexport default function ImageInput({ handleChange }) {\n  const { setFieldValue } = useFormikContext();\n\n  const handleChooseFile = async e => {\n    const file = e.target.files?.[0];\n\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        handleChange(reader.result);\n      };\n      reader.readAsDataURL(file);\n      setFieldValue('avatar', file);\n    }\n  };\n\n  return (\n    <>\n      <input\n        type=\"file\"\n        id=\"avatar\"\n        name=\"avatar\"\n        accept=\"image/*\"\n        hidden\n        onChange={handleChooseFile}\n      />\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formTitle\":\"UserForm_formTitle__otdTI\",\"formWrap\":\"UserForm_formWrap__Wzihy\",\"avatar\":\"UserForm_avatar__waQVs\",\"userAvaWrapper\":\"UserForm_userAvaWrapper__k1VgJ\",\"userImg\":\"UserForm_userImg__tVfTy\",\"iconBtnPlus\":\"UserForm_iconBtnPlus__nmlZL\",\"iconPlus\":\"UserForm_iconPlus__MDJty\",\"fieldWrapper\":\"UserForm_fieldWrapper__oOtLf\",\"field\":\"UserForm_field__3YSzB\",\"btnSend\":\"UserForm_btnSend__Qj2O-\",\"iconBtn\":\"UserForm_iconBtn__H9XGh\",\"iconEye\":\"UserForm_iconEye__uJFvZ\",\"errorMessage\":\"UserForm_errorMessage__lrIyV\",\"slideIn\":\"UserForm_slideIn__wuS5p\",\"userIconBtn\":\"UserForm_userIconBtn__FYCa-\",\"userIcon\":\"UserForm_userIcon__TYapX\"};","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useTranslation } from 'react-i18next';\n\nimport { selectUser } from '../../../redux/auth/selector.js';\nimport { updaterUserData } from '../../../redux/auth/authThunks.js';\n\nimport ImageInput from './ImgInput.jsx';\nimport sprite from '../../../images/sprite.svg';\nimport css from './UserForm.module.css';\n\nconst emailRegExp = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\nconst schema = Yup.object().shape({\n  avatar: Yup.mixed().test('fileType', 'Invalid file format', value => {\n    if (!value) return true;\n    const supportedFormats = ['image/png', 'image/jpeg', 'image/jpg'];\n    return supportedFormats.includes(value.type);\n  }),\n  name: Yup.string()\n    .min(2, 'Name must be at least 6 characters')\n    .max(32, 'Name must be no more than 16 characters')\n    .required('Name is required*'),\n  email: Yup.string()\n    .matches(emailRegExp, 'Enter a valid Email*')\n    .email('Enter a valid Email*')\n    .required('Email is required*'),\n  password: Yup.string()\n    .matches(/^(?=.*[a-z])/, 'Password must meet the requirements*')\n    .min(8, 'Password must be at least 6 characters')\n    .max(64, 'Password must be no more than 16 characters'),\n});\n\nexport const UserForm = () => {\n  const user = useSelector(selectUser);\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [image, setPreviewImage] = useState(null);\n  const dispatch = useDispatch();\n  const {t} = useTranslation()\n\n  const handleImageChange = imageUrl => {\n    setPreviewImage(imageUrl);\n  };\n\n  const createUserDataFormData = infoUser => {\n    const formData = new FormData();\n    console.log(infoUser);\n    if (infoUser.password) {\n      formData.append('password', infoUser.password);\n    }\n    formData.append('name', infoUser.name);\n    formData.append('email', infoUser.email);\n    formData.append('avatarURL', infoUser.avatarURL);\n\n    return formData;\n  };\n\n  const handleSubmit = (values, { resetForm, setFieldValue }) => {\n    const newUserData = {\n      name: values.name,\n      email: values.email,\n      avatarURL: values.avatar,\n      ...(values.password && { password: values.password }),\n    };\n\n    const userData = createUserDataFormData(newUserData);\n\n    dispatch(updaterUserData(userData));\n\n    resetForm();\n\n    setFieldValue('name', values.name);\n    setFieldValue('email', values.email);\n  };\n\n  const handleClickPasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  return (\n    <>\n      <h2 className={css.formTitle}>{t('form.edt-prf')}</h2>\n        <Formik\n          initialValues={{\n            avatar: '',\n            avatarURL: user.avatarURL,\n            name: user.name,\n            email: user.email,\n            password: '',\n          }}\n          validationSchema={schema}\n          onSubmit={handleSubmit}\n        >\n          <Form>\n            <div className={css.avatar}>\n              <label className={css.userAvaWrapper}>\n                {image || user.avatarURL ? (\n                  <img\n                    src={image ? image : user.avatarURL}\n                    alt=\"\"\n                    className={css.userImg}\n                    width={68}\n                  />\n                ) : (\n                  <div className={css.userIconBtn}>\n                    <svg className={css.userIcon}>\n                      <use href={`${sprite}#icon-user2`} />\n                    </svg>\n                  </div>\n                )}\n\n                <label htmlFor=\"avatar\" className={css.iconBtnPlus}>\n                  <ImageInput handleChange={handleImageChange} />\n\n                  <svg className={css.iconPlus} width=\"10\" height=\"10\">\n                    <use xlinkHref={`${sprite}#icon-plus`} />\n                  </svg>\n                </label>\n              </label>\n            </div>\n            <div className={css.fieldWrapper}>\n              <Field\n                className={css.field}\n                type=\"text\"\n                name=\"name\"\n                placeholder={t('form.name-prf')}\n              />\n              <ErrorMessage name=\"name\">\n                {errorMsg => <div className={css.errorMessage}>{errorMsg}</div>}\n              </ErrorMessage>\n            </div>\n            <div className={css.fieldWrapper}>\n              <Field\n                className={css.field}\n                type=\"email\"\n                name=\"email\"\n                placeholder={t('form.mail-prf')}\n              />\n              <ErrorMessage name=\"email\">\n                {errorMsg => <div className={css.errorMessage}>{errorMsg}</div>}\n              </ErrorMessage>\n            </div>\n            <div className={css.fieldWrapper}>\n              <Field\n                className={css.field}\n                type={passwordVisible ? 'text' : 'password'}\n                name=\"password\"\n                placeholder={t('form.psw-prf')}\n              />\n              {passwordVisible ? (\n                <button\n                  className={css.iconBtn}\n                  type=\"button\"\n                  onClick={handleClickPasswordVisibility}\n                >\n                  <svg className={css.iconEye} width=\"18\" height=\"18\">\n                    <use href={`${sprite}#icon-eye`} />\n                  </svg>\n                </button>\n              ) : (\n                <button\n                  className={css.iconBtn}\n                  type=\"button\"\n                  onClick={handleClickPasswordVisibility}\n                >\n                  <svg className={css.iconEye} width=\"18\" height=\"18\">\n                    <use href={`${sprite}#icon-eye`} />\n                  </svg>\n                </button>\n              )}\n              <ErrorMessage name=\"password\">\n                {errorMsg => <div className={css.errorMessage}>{errorMsg}</div>}\n              </ErrorMessage>\n            </div>\n            <button className={css.btnSend} type=\"submit\">\n            {t('form.send-btn')}\n            </button>\n          </Form>\n        </Formik>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"react-datepicker__input-container\":\"Calendar_react-datepicker__input-container__ATOa8\",\"react-datepicker__current-month\":\"Calendar_react-datepicker__current-month__Dy2JK\",\"react-datepicker__navigation\":\"Calendar_react-datepicker__navigation__gjsop\",\"react-datepicker__day-name\":\"Calendar_react-datepicker__day-name__QhkFB\",\"react-datepicker__day\":\"Calendar_react-datepicker__day__gyfuL\",\"react-datepicker__day--selected\":\"Calendar_react-datepicker__day--selected__yrVtx\",\"react-datepicker__time-name\":\"Calendar_react-datepicker__time-name__MUgtg\",\"react-datepicker__day--keyboard-selected\":\"Calendar_react-datepicker__day--keyboard-selected__XlOZz\",\"react-datepicker__month-text--keyboard-selected\":\"Calendar_react-datepicker__month-text--keyboard-selected__lMIox\",\"react-datepicker__quarter-text--keyboard-selected\":\"Calendar_react-datepicker__quarter-text--keyboard-selected__Vb42w\",\"react-datepicker__year-text--keyboard-selected\":\"Calendar_react-datepicker__year-text--keyboard-selected__7aYBU\",\"react-datepicker__day--outside-month\":\"Calendar_react-datepicker__day--outside-month__SVg29\",\"react-datepicker__day--disabled\":\"Calendar_react-datepicker__day--disabled__UIKz5\",\"calendar\":\"Calendar_calendar__vKx+D\",\"day\":\"Calendar_day__voALS\",\"header\":\"Calendar_header__Iy6a3\",\"inputCalendar\":\"Calendar_inputCalendar__Sc-4V\",\"weekDay\":\"Calendar_weekDay__qahmX\",\"iconChevronDown\":\"Calendar_iconChevronDown__ux706\",\"buttonWithIcon\":\"Calendar_buttonWithIcon__sMmhG\",\"disabled\":\"Calendar_disabled__ohA1v\"};","import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport { enGB } from 'date-fns/locale';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport css from './Calendar.module.css';\nimport { forwardRef } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport { format } from 'date-fns';\n\nconst CustomInputWrapper = forwardRef(({ value, onClick }, ref) => (\n  <button\n    type=\"button\"\n    className={`${css.inputCalendar} ${css.buttonWithIcon}`}\n    onClick={onClick}\n    ref={ref}\n  >\n    <span>{value}</span>\n    <svg\n      data-popup=\"popupBtn\"\n      className={css.iconChevronDown}\n      width=\"18\"\n      height=\"18\"\n    >\n      <use data-popup=\"popupBtn\" href={`${sprite}#icon-chevron-down`} />\n    </svg>\n  </button>\n));\n\nexport function Calendar({ selectedDate, onDateChange }) {\n  const handleDateChange = (date) => {\n    onDateChange(date);\n  };\n\n  const getDateFormat = (date) => {\n  const today = new Date();\n  const tomorrow = new Date();\n  tomorrow.setDate(today.getDate() + 1);\n  if (\n    date.getDate() === today.getDate() &&\n    date.getMonth() === today.getMonth() &&\n    date.getFullYear() === today.getFullYear()\n  ) {\n    return \"'Today', MMMM dd\";\n  } else if (\n    date.getDate() === tomorrow.getDate() &&\n    date.getMonth() === tomorrow.getMonth() &&\n    date.getFullYear() === tomorrow.getFullYear()\n  ) {\n    return \"'Tomorrow', MMMM dd\";\n  } else {\n    return \"EEEE, MMMM dd\";\n  }\n};\n\n  const isDateDisabled = (date) => {\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    return date <= yesterday;\n  };\n\n  return (\n    <div>\n      <DatePicker\n        calendarClassName={css.calendar}\n        dayClassName={(date) =>\n          `${css.day} ${isDateDisabled(date) ? css.disabled : ''}`\n        }\n        renderCustomHeader={({\n          date,\n          decreaseMonth,\n          increaseMonth,\n          prevMonthButtonDisabled,\n          nextMonthButtonDisabled,\n        }) => (\n          <div className={css.header}>\n            <button\n              type=\"button\"\n              onClick={decreaseMonth}\n              disabled={prevMonthButtonDisabled}\n            >\n              {\"<\"}\n            </button>\n            <span>\n              {format(date, 'MMMM yyyy', { locale: enGB })}\n            </span>\n            <button\n              type=\"button\"\n              onClick={increaseMonth}\n              disabled={nextMonthButtonDisabled}\n            >\n              {\">\"}\n            </button>\n          </div>\n        )}\n        selected={selectedDate}\n        onChange={handleDateChange}\n        dateFormat={getDateFormat(selectedDate)}\n        minDate={new Date()}\n        locale={enGB}\n        weekStartsOn={0}\n        popoverPlacement=\"bottom\"\n        customInput={<CustomInputWrapper />}\n        className={css.inputCalendar}\n        weekDayClassName={() => css.weekDay}\n      />\n    </div>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"formTitle\":\"AddCard_formTitle__CSCfd\",\"formInputTitle\":\"AddCard_formInputTitle__-wZxj\",\"formInput\":\"AddCard_formInput__J106k\",\"iconsForm\":\"AddCard_iconsForm__f8URq\",\"iconsWrap\":\"AddCard_iconsWrap__Qc161\",\"iconsTitle\":\"AddCard_iconsTitle__w-bIb\",\"Span\":\"AddCard_Span__4-tx7\",\"no\":\"AddCard_no__+VNMC\",\"low\":\"AddCard_low__oVkDn\",\"med\":\"AddCard_med__t4ZHr\",\"high\":\"AddCard_high__zfd21\",\"container\":\"AddCard_container__F7Kum\",\"checkmark\":\"AddCard_checkmark__3XP0U\",\"deadlineStyle\":\"AddCard_deadlineStyle__5OMP-\",\"deadlineContainer\":\"AddCard_deadlineContainer__LpbeE\",\"span\":\"AddCard_span__YWyk5\",\"AddButton\":\"AddCard_AddButton__KzT9F\",\"StylePlus\":\"AddCard_StylePlus__4RF-v\",\"formButton\":\"AddCard_formButton__+MQRW\",\"iconWrap\":\"AddCard_iconWrap__VCvZe\",\"buttonIcon\":\"AddCard_buttonIcon__egjKz\"};","import { useState } from 'react';\nimport { Calendar } from 'components/Calendar';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postCard } from '../../../redux/card/cardThunk';\nimport { closeModal } from '../../../redux/modalSlice';\nimport css from './AddCard.module.css';\nimport { priorityEnum } from 'utils/priorityObject';\nimport { useTranslation } from 'react-i18next';\n\nexport const AddCardForm = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [priority, setPriority] = useState('Without priority');\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const currBoardId = useSelector(state => state.boards.currentBoardId);\n  const currColumnId = useSelector(state => state.columns.currentColumnId);\n  const allCards = useSelector(state => state.cards.cards);\n  const currColumnCardsLgth = allCards.filter(\n    card => card.columnId === currColumnId\n  ).length;\n  const dispatch = useDispatch();\n  const {t} = useTranslation()\n\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleDescChange = e => {\n    setDescription(e.target.value);\n  };\n\n  const handleDataChange = date => {\n    setSelectedDate(date);\n  };\n\n  const handlePriorityChange = e => {\n    setPriority(e.target.value);\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const index = currColumnCardsLgth;\n    const newCard = {\n      title,\n      description,\n      priority,\n      deadline: selectedDate.getTime(),\n      boardId: currBoardId,\n      columnId: currColumnId,\n      index: index,\n    };\n    dispatch(postCard(newCard));\n    dispatch(closeModal());\n  };\n\n  return (\n    <>\n      <h2 className={css.formTitle}>{t('form.card-add')}</h2>\n      <form className={css.from} onSubmit={handleSubmitForm}>\n        <input\n          className={css.formInputTitle}\n          type=\"text\"\n          name=\"title\"\n          placeholder={t('form.new-placeholder')}\n          onChange={e => handleTitleChange(e)}\n          required\n        />\n        <p className={css.errMsg} name=\"title\" />\n        <label>\n          <textarea\n            className={css.formInput}\n            rows={4}\n            name=\"text\"\n            placeholder={t('form.crd-descr')}\n            onChange={e => handleDescChange(e)}\n            required\n          />\n          <p className={css.errMsg} name=\"text\" />\n        </label>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>{t('form.lbl-color')}</legend>\n          <div className={css.iconsWrap}>\n            {priorityEnum.map(pr => {\n              return (\n                <label key={pr.title} className={css.container}>\n                  <input\n                    type=\"radio\"\n                    name=\"icon\"\n                    value={pr.title}\n                    onChange={e => handlePriorityChange(e)}\n                    required\n                    checked = {priority === pr.title}\n                  />\n                  <span\n                    style={{ backgroundColor: `${pr.color}` }}\n                    className={`${css.checkmark}`}\n                  ></span>\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <p className={css.deadlineStyle}>{t('main.card-deadline')}</p>\n        <div className={css.deadlineContainer}>\n          {/* {selectedDate.getDate() === new Date().getDate() &&\n          selectedDate.getMonth() === new Date().getMonth() &&\n          selectedDate.getFullYear() === new Date().getFullYear() ? (\n            <span className={css.span}> Today,</span>\n          ) : null} */}\n          <Calendar\n            selectedDate={selectedDate}\n            onDateChange={handleDataChange}\n          />\n        </div>\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          {t('form.add-crd-btn')}\n        </button>\n      </form>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { Calendar } from 'components/Calendar';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateCard } from '../../../redux/card/cardThunk';\nimport { closeModal } from '../../../redux/modalSlice';\nimport css from './AddCard.module.css';\nimport { priorityEnum } from 'utils/priorityObject';\nimport { useTranslation } from 'react-i18next';\n\nexport const EditCardForm = () => {\n  const { selectedElId } = useSelector(state => state.modal);\n  console.log(selectedElId);\n  const stateCards = useSelector(state => state.cards.cards)\n  const currentCard = stateCards.find(card=> card._id === selectedElId)\n  const dispatch = useDispatch();\n  const {t} = useTranslation()\n\n  const [title, setTitle] = useState(currentCard.title);\n  const [description, setDescription] = useState(currentCard.description);\n  const [priority, setPriority] = useState(currentCard.priority);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleDescChange = e => {\n    setDescription(e.target.value);\n  };\n\n  const handlePriorityChange = e => {\n    setPriority(e.target.value);\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const cardData = {\n      title,\n      description,\n      priority,\n      deadline: selectedDate.getTime(),\n    };\n    console.log(cardData)\n    dispatch(updateCard({id: currentCard._id, newCard: cardData}))\n    dispatch(closeModal());\n  };\n\n  return (\n    <>\n    <h2 className={css.formTitle}>{t('form.edt-card')}</h2>\n      <form className={css.from} onSubmit={handleSubmitForm}>\n        <input\n          className={css.formInputTitle}\n          type=\"text\"\n          name=\"title\"\n          placeholder={t('form.new-placeholder')}\n          value={title}\n          onChange={handleTitleChange}\n          required\n        />\n        <p className={css.errMsg} name=\"title\" />\n        <label>\n          <textarea\n            className={css.formInput}\n            rows={4}\n            name=\"text\"\n            placeholder={t('form.crd-descr')}\n            value={description}\n            onChange={handleDescChange}\n            required\n          />\n          <p className={css.errMsg} name=\"text\" />\n        </label>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>{t('form.lbl-color')}</legend>\n          <div className={css.iconsWrap}>\n            {priorityEnum.map(pr => (\n              <label key={pr.title} className={css.container}>\n                <input\n                  type=\"radio\"\n                  id={pr.title}\n                  name=\"icon\"\n                  value={pr.title}\n                  checked={priority === pr.title}\n                  onChange={handlePriorityChange}\n                  required\n                />\n                <span\n                  style={{ backgroundColor: `${pr.color}` }}\n                  className={`${css.checkmark}`}\n                ></span>\n              </label>\n            ))}\n          </div>\n        </fieldset>\n        <p className={css.deadlineStyle}>{t('main.card-deadline')}</p>\n        <div className={css.deadlineContainer}>\n          {/* {selectedDate.getDate() === new Date().getDate() &&\n          selectedDate.getMonth() === new Date().getMonth() &&\n          selectedDate.getFullYear() === new Date().getFullYear() ? (\n            <span className={css.span}> Today,</span>\n          ) : null} */}\n          <Calendar\n            selectedDate={selectedDate}\n            onDateChange={date => {\n              setSelectedDate(date);\n            }}\n          />\n        </div>\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          {t('form.edt-crd-btn')}\n        </button>\n      </form>\n    </>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"WDText\":\"Warning_WDText__ymCfe\",\"WDTitle\":\"Warning_WDTitle__vDx9U\",\"WList\":\"Warning_WList__M1oCa\",\"WItem\":\"Warning_WItem__8mszk\",\"WButton\":\"Warning_WButton__WP+JL\",\"btnDel\":\"Warning_btnDel__vzuwV\",\"btnCnl\":\"Warning_btnCnl__iPLGy\"};","import css from './Warning.module.css';\nimport { useTranslation } from 'react-i18next';\n\n\nexport const WarningList = ({onDelete, onCancel, onLogout})=> {\n  const {t} = useTranslation()\n  return (\n    \n        <ul className={css.WList}>\n            <li className={css.WItem}><button className={`${css.WButton} ${css.btnDel}`}type=\"submit\" onClick={onDelete ?? onLogout}>{onLogout ? `${t('form.cnf-logout')}` : `${t('form.cnf-btn')}`}</button></li>\n            <li className={css.WItem}><button className={`${css.WButton} ${css.btnCnl}`}type=\"button\" onClick={onCancel}>{t('form.cnl-btn')}</button></li>\n        </ul>\n   \n  )\n}\n","\nimport { useSelector } from 'react-redux';\nimport css from './Warning.module.css';\nimport { WarningList } from './WarningList';\nimport { deleteCard } from '../../redux/card/cardThunk';\nimport { useDispatch } from 'react-redux';\nimport { deleteBoard } from '../../redux/board/boardThunks';\nimport { deleteColumn } from '../../redux/column/columnThunk';\nimport { updateColumnId } from '../../redux/card/cardThunk';\nimport { closeModal } from '../../redux/modalSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\n\n\nexport const WarningDell = ()=> {\n const dispatch = useDispatch();\n const navigate = useNavigate()\n  const { selectedElId } = useSelector(state => state.modal);\n  const allCards = useSelector(state=> state.cards.cards)\n  const {t} = useTranslation()\n\n  const handleDelete = () =>{\n    if(selectedElId.deadline){\n      dispatch(deleteCard(selectedElId._id))\n      const currCards = allCards.filter(c => c.columnId === selectedElId.columnId)\n      currCards.forEach(c => {\n      if((c.index < selectedElId.index) || (c._id === selectedElId._id)){\n        return\n      }\n      dispatch(updateColumnId({id: c._id, columnId: c.columnId, index: c.index - 1}))\n    });\n\n      dispatch(closeModal())\n      return\n    }\n    if(selectedElId.icon){\n      dispatch(deleteBoard(selectedElId._id))\n      navigate('/home')\n      dispatch(closeModal())\n      return\n    }\n    dispatch(deleteColumn(selectedElId._id))\n    dispatch(closeModal())\n  }\n\n  const handleCancel = () =>{\n    dispatch(closeModal())\n  }\n\n  return (\n    <>\n       <p className={css.WDText}>{t('form.del-text')} <span className={css.WDTitle}>{selectedElId.title ?? selectedElId.name}</span></p>\n        <WarningList onDelete={handleDelete} onCancel={handleCancel}/>\n    </>\n  )\n}\n","import { useDispatch } from 'react-redux';\nimport css from './Warning.module.css';\nimport { WarningList } from './WarningList';\nimport { logoutThunk } from '../../redux/auth/authThunks';\nimport { closeModal } from '../../redux/modalSlice';\nimport { useTranslation } from 'react-i18next';\n\n\nexport const WarningLogout = ()=> {\n  const dispatch = useDispatch();\n  const {t} = useTranslation()\n\n  const handleLogout = () => {\n    console.log(\"LOGOUT\")\n    dispatch(logoutThunk());\n    dispatch(closeModal())\n  };\n\n  const handleCancel = ()=>{\n    dispatch(closeModal())\n  }\n\n  return (\n    <>\n    <p className={css.WDText}>{t('form.logout')}</p>\n    <WarningList onLogout={handleLogout} onCancel={handleCancel}/>\n    </>\n  )\n}","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useRef } from 'react';\nimport { closeModal } from '../../redux/modalSlice';\nimport { useLockBodyScroll } from '@uidotdev/usehooks';\nimport css from './ModalBody.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { motion } from 'framer-motion';\nimport { NewBoardForm } from 'components/Forms/BoardForm/NewBoardForm';\nimport { EditBoardForm } from 'components/Forms/BoardForm/EditBoardForm';\nimport { AddColumnForm } from 'components/Forms/Column/AddColumnForm';\nimport { EditColumnForm } from 'components/Forms/Column/EditColumnForm';\nimport { NeedHelpForm } from 'components/Forms/Help/NeedHelpForm';\nimport { UserForm } from 'components/Forms/UserForm/UserForm';\nimport { AddCardForm } from 'components/Forms/CardForm/AddCard';\nimport { EditCardForm } from 'components/Forms/CardForm/EditCard';\nimport { WarningDell } from 'components/Warning/WarningDell';\nimport { WarningLogout } from 'components/Warning/WarningLogout';\n\nexport const ModalBody = () => {\n  const dispatch = useDispatch();\n  const { modalContent } = useSelector(state => state.modal); // ДІСТАЄ З РЕДАКСУ КОНТЕНТ\n  useLockBodyScroll(); //БЛОКУЄ СКРОЛ СТОРІНКИ\n\n  const firstRender = useRef(false);\n  useLockBodyScroll();\n\n  useEffect(() => {\n    if (firstRender.current === false) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      firstRender.current = false;\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      dispatch(closeModal()); //ЗАКРИТТЯ НА ЕСКЕЙП\n    }\n  };\n\n  const backdropClose = e => {\n    if (e.target === e.currentTarget) {\n      //ЗАКРИТТЯ НА БЕКДРОП\n      dispatch(closeModal());\n    }\n  };\n\n  const handleBtnClose = () =>{\n    dispatch(closeModal());\n  }\n\n  const handleContent = content => {\n    //ФУНКЦІЯ ВИЗНАЧЕННЯ РЕДНЕРУ КОНЕТНТУ. КОЖЕН КЕЙС ПОТРІБНО ПРОПИСАТИ\n    switch (content) {\n      case 'add-board':\n        return <NewBoardForm />;\n      case 'edit-board':\n        return <EditBoardForm />;\n      case 'add-column':\n        return <AddColumnForm />;\n      case 'edit-column':\n        return <EditColumnForm />;\n      case 'need-help':\n        return <NeedHelpForm />;\n      case 'edit-profile':\n        return <UserForm />;\n      case 'edit-card':\n        return <EditCardForm />;\n      case 'add-card':\n        return <AddCardForm />;\n      case 'warning-dell':\n        return <WarningDell/>\n      case 'warning-logout':\n          return <WarningLogout/>\n  \n      default:\n        break;\n    }\n  };\n\n  return (\n    \n    <div onClick={e => backdropClose(e)} className={css.modalBackdrop}>\n      <motion.div\n        animate={{ y: '0%' }}\n        initial={{ y: '100%' }}\n        className={css.modalBody}\n      >\n        <button onClick={handleBtnClose} className={css.closeButton}>\n          <svg width=\"20\" height=\"20\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-close`} />\n            </svg>\n        </button>\n        <div className={css.formWrap}>\n          {handleContent(modalContent)}\n        </div>\n        \n      </motion.div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"sideBar\":\"Sidebar_sideBar__A8DTG\",\"sidebarBackdrop\":\"Sidebar_sidebarBackdrop__ozg8G\",\"sideBarOpened\":\"Sidebar_sideBarOpened__9jug6\",\"titleBox\":\"Sidebar_titleBox__xqSVd\",\"iconBox\":\"Sidebar_iconBox__lGsim\",\"logoIconContainer\":\"Sidebar_logoIconContainer__yiz-a\",\"iconLogo\":\"Sidebar_iconLogo__P5b+p\",\"title\":\"Sidebar_title__mzY+F\",\"bordBox\":\"Sidebar_bordBox__l9HDF\",\"bordTitle\":\"Sidebar_bordTitle__iDwHw\",\"buttonBox\":\"Sidebar_buttonBox__+dqOM\",\"buttonText\":\"Sidebar_buttonText__0LoRm\",\"buttonCreate\":\"Sidebar_buttonCreate__t3LZl\",\"iconCreate\":\"Sidebar_iconCreate__vE+2z\",\"scrollArea\":\"Sidebar_scrollArea__p2BVw\",\"bordList\":\"Sidebar_bordList__PS2uv\",\"helpBox\":\"Sidebar_helpBox__W7BKt\",\"helpTextBox\":\"Sidebar_helpTextBox__Sd7S6\",\"helpText\":\"Sidebar_helpText__1vwtr\",\"helpTextLink\":\"Sidebar_helpTextLink__QXL1T\",\"buttonHelp\":\"Sidebar_buttonHelp__nkXAH\",\"iconHelp\":\"Sidebar_iconHelp__6c8m3\",\"helpButtonText\":\"Sidebar_helpButtonText__0g7gg\",\"buttonLogOut\":\"Sidebar_buttonLogOut__VYxol\",\"iconLogOut\":\"Sidebar_iconLogOut__GX2DR\",\"logOutButtonText\":\"Sidebar_logOutButtonText__vzEjb\"};","// extracted by mini-css-extract-plugin\nexport default {\"boardItem\":\"Board_boardItem__pg3mb\",\"active\":\"Board_active__HNxD3\",\"boardButton\":\"Board_boardButton__9AuMq\",\"boardIcon\":\"Board_boardIcon__TALFy\",\"boardTitleBox\":\"Board_boardTitleBox__N1O+A\",\"boardText\":\"Board_boardText__tGGO5\",\"boardTittle\":\"Board_boardTittle__4B6lS\",\"boardButtonBox\":\"Board_boardButtonBox__pijVR\",\"iconButton\":\"Board_iconButton__9r8ni\"};","import css from './Board.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openModal } from '../../../redux/modalSlice';\nimport { closeSidebar } from '../../../redux/modalSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { setCurrentBoardId } from '../../../redux/board/boardSlice';\nimport { clearColumns } from '../../../redux/column/columnSlice';\n\nexport const Board = ({ board }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const currBoardId = useSelector(state => state.boards.currentBoardId);\n\n  const handleEditBoard = () => {\n    dispatch(openModal({ content: 'edit-board', id: `${board._id}` }));\n  };\n  const handleNavigate = e => {\n    if (e.dataset === 'icon') {\n      return;\n    }\n    navigate(`/home/${board._id}`);\n    dispatch(setCurrentBoardId(board._id));\n    dispatch(closeSidebar());\n    if (board._id !== currBoardId) {\n      dispatch(clearColumns());\n    }\n  };\n\n  const handleWarningBoard = () => {\n    dispatch(openModal({ content: 'warning-dell', id: board }));\n  };\n  return (\n    <li\n      id=\"boardBtn\"\n      onClick={handleNavigate}\n      className={`${css.boardItem} ${\n        board._id === currBoardId ? css.active : ''\n      }`}\n    >\n      <div className={css.boardTitleBox}>\n        <svg width=\"18\" height=\"18\" className={css.boardIcon}>\n          <use href={`${sprite}#icon-${board.icon}`} />\n        </svg>\n        <p className={css.boardText}>{board.name}</p>\n      </div>\n      <div className={css.boardButtonBox}>\n        <button\n          data-icon=\"icon\"\n          onClick={handleEditBoard}\n          className={css.boardButton}\n        >\n          <svg\n            data-icon=\"icon\"\n            className={css.iconButton}\n            width=\"16\"\n            height=\"16\"\n          >\n            <use data-icon=\"icon\" href={`${sprite}#icon-pencil`} />\n          </svg>\n        </button>\n        <button\n          className={css.boardButton}\n          onClick={handleWarningBoard}\n          data-icon=\"icon\"\n        >\n          <svg\n            data-icon=\"icon\"\n            className={css.iconButton}\n            width=\"16\"\n            height=\"16\"\n          >\n            <use data-icon=\"icon\" href={`${sprite}#icon-trash`} />\n          </svg>\n        </button>\n      </div>\n    </li>\n  );\n};\n","import css from './Sidebar.module.css';\nimport sprite from '../../images/sprite.svg';\nimport pot from '../../images/need-help/pot.png';\nimport pot2x from '../../images/need-help/pot2x.png';\nimport { useAutoAnimate } from '@formkit/auto-animate/react';\nimport { Board } from './Board/Board';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openModal, closeSidebar } from '../../redux/modalSlice';\nimport { selectBoards } from '../../redux/board/selectors';\nimport { useEffect } from 'react';\nimport { fetchBoards } from '../../redux/board/boardThunks';\nimport { useTranslation } from 'react-i18next';\n\nexport const Sidebar = () => {\n  const {t} = useTranslation()\n  const dispatch = useDispatch();\n  const boards = useSelector(selectBoards);\n  const [listRef] = useAutoAnimate();\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  const { sideBarIsOpen } = useSelector(state => state.modal);\n\n  const handleAddBoard = () => {\n    dispatch(openModal({ content: 'add-board' }));\n  };\n\n  const handleNeddHelp = () => {\n    dispatch(openModal({ content: 'need-help' }));\n  };\n  const handleCloseSidebar = e => {\n    if (e.target === e.currentTarget) {\n      dispatch(closeSidebar());\n    }\n  };\n\n  const handleLogout = () => {\n    dispatch(openModal({ content: 'warning-logout' }));\n  };\n  return (\n    <div\n      onClick={e => handleCloseSidebar(e)}\n      className={`${sideBarIsOpen && css.sidebarBackdrop}`}\n    >\n      <div className={`${css.sideBar} ${sideBarIsOpen && css.sideBarOpened}`}>\n        {/* logo, title */}\n        <div className={css.titleBox}>\n          <div className={css.iconBox}>\n            <div className={css.logoIconContainer}>\n              <svg className={css.iconLogo} width=\"16\" height=\"16\">\n                <use href={`${sprite}#icon-logo`} />\n              </svg>\n            </div>\n            <h2 className={css.title}>Task Pro</h2>\n          </div>\n          <div className={css.bordBox}>\n            <h3 className={css.bordTitle}>{t(\"sb.title\")}</h3>\n            {/* button create */}\n            <div className={css.buttonBox}>\n              <span className={css.buttonText}>{t('sb.createbutton')}</span>\n              <button onClick={handleAddBoard} className={css.buttonCreate}>\n                <svg className={css.iconCreate} width=\"22\" height=\"22\">\n                  <use href={`${sprite}#icon-plus`} />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n        {boards.length > 0 && (\n          <ul className={css.bordList} ref={listRef}>\n            {boards.map(board => (\n              <Board key={board._id} board={board}></Board>\n            ))}\n          </ul>\n        )}\n        {/* need help */}\n        <div className={css.helpBox}>\n          <div className={css.helpTextBox}>\n            {boards.length <= 2 && (\n              <>\n                <picture className={css.imgHelp}>\n                  <source srcSet={`${pot} 1x, ${pot2x} 2x`} />\n                  <img srcSet={`${pot} 1x`} alt=\"pot\" />\n                </picture>\n                <p className={css.helpText}>\n                  {t(\"sb.help-1st\")}<br></br>\n                  <span className={css.helpTextLink}>TaskPro</span>{t(\"sb.help-2nd\")}\n                </p>\n              </>\n            )}\n            <button onClick={handleNeddHelp} className={css.buttonHelp}>\n              <svg className={css.iconHelp} width=\"20\" height=\"20\">\n                <use href={`${sprite}#icon-help`} />\n              </svg>\n              <p className={css.helpButtonText}>{t(\"sb.btn-text\")}</p>\n            </button>\n          </div>\n          {/* logout */}\n          <button onClick={handleLogout} className={css.buttonLogOut}>\n            <svg className={css.iconLogOut} width=\"32\" height=\"32\">\n              <use href={`${sprite}#icon-login`} />\n            </svg>\n            <p className={css.logOutButtonText}>{t(\"sb.logout-text\")}</p>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"boardDefault\":\"DefaultBoard_boardDefault__OGVRe\",\"boardDefaultText\":\"DefaultBoard_boardDefaultText__9+0UM\",\"boardDefaultLink\":\"DefaultBoard_boardDefaultLink__D+uKf\"};","import css from './DefaultBoard.module.css';\nimport { useDispatch } from 'react-redux';\nimport { openModal } from '../../redux/modalSlice';\nimport { useTranslation } from 'react-i18next';\n\nexport const DefaultBoard = () => {\n  const {t} = useTranslation()\n  const dispatch = useDispatch();\n\n  const handleOpenAddBoardModal = () => {\n    dispatch(openModal({ content: 'add-board' }));\n  };\n\n  return (\n    <div className={css.boardDefault}>\n      <p className={css.boardDefaultText}>\n        {t(\"dflt.text-1st\")}{' '}\n        <span\n          className={css.boardDefaultLink}\n          onClick={handleOpenAddBoardModal}\n        >\n          {t(\"dflt.text-thumb\")}\n        </span>{' '}\n        {t(\"dflt.text-2nd\")}\n      </p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"navContainer\":\"Navigation_navContainer__+dgHg\",\"buttonBurger\":\"Navigation_buttonBurger__Kqo-y\",\"iconBurger\":\"Navigation_iconBurger__Y+5FL\",\"navMenu\":\"Navigation_navMenu__tyi6A\",\"spinner\":\"Navigation_spinner__M9WGo\",\"lngWrap\":\"Navigation_lngWrap__PKB1b\",\"lngBtn\":\"Navigation_lngBtn__WG5ss\",\"iconLng\":\"Navigation_iconLng__qC+qm\"};","// extracted by mini-css-extract-plugin\nexport default {\"userInfo\":\"UserMenu_userInfo__78zcg\",\"buttonOpen\":\"UserMenu_buttonOpen__XKE8P\",\"userAvatarWrap\":\"UserMenu_userAvatarWrap__8cND4\",\"userIcon\":\"UserMenu_userIcon__Wa0NS\",\"userAvatar\":\"UserMenu_userAvatar__uOf3o\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { openModal } from '../../redux/modalSlice';\nimport css from './UserMenu.module.css';\nimport sprite from '../../images/sprite.svg';\n\nexport const UserMenu = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user);\n  const handleUserModalOpen = () => {\n    dispatch(openModal({ content: 'edit-profile' }));\n  };\n\n  return (\n    <>\n      <div className={css.userInfo}>\n        <button\n          className={css.buttonOpen}\n          type=\"button\"\n          onClick={handleUserModalOpen}\n        >\n          {user.name}\n\n          <div>\n            {user.avatarURL ? (\n              <div className={css.userAvatar}>\n                <img\n                  src={user.avatarURL}\n                  alt=\"\"\n                  className={css.userAvatar}\n                  width={68}\n                />\n              </div>\n            ) : (\n              <div className={css.userAvatarWrap}>\n                <div className={css.userIcon}>\n                  <svg className={css.userIcon}>\n                    <use href={`${sprite}#icon-user2`} />\n                  </svg>\n                </div>\n              </div>\n            )}\n            {/* <svg className={css.userIcon}>\n              <use href={`${sprite}#icon-user2`} />\n            </svg> */}\n          </div>\n        </button>\n      </div>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"menuTheme\":\"ThemeSelect_menuTheme__syeY8\",\"iconChevronDown\":\"ThemeSelect_iconChevronDown__z0Zx0\",\"titleMenuTheme\":\"ThemeSelect_titleMenuTheme__kfQsY\",\"buttonMenu\":\"ThemeSelect_buttonMenu__M4R80\",\"menuList\":\"ThemeSelect_menuList__tMjNr\",\"menuItem\":\"ThemeSelect_menuItem__ZUuoU\",\"activ\":\"ThemeSelect_activ__ggT2D\",\"menuListHidden\":\"ThemeSelect_menuListHidden__TW9FY\"};","import css from './ThemeSelect.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updaterUserTheme } from '../../redux/auth/authThunks';\nimport { useTranslation } from 'react-i18next';\n\nexport const ThemePopup = ({ onSelectClose, isOpen }) => {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user);\n  const {t} = useTranslation()\n\n  const handleChangeTheme = e => {\n    dispatch(updaterUserTheme({ theme: `${e.target.id}` }));\n    const selectedTheme = e.target.id;\n    localStorage.setItem('theme', selectedTheme);\n    onSelectClose();\n    \n  };\n\n  return (\n    <ul\n      data-popup=\"menu\"\n      className={`${css.menuList} ${!isOpen && css.menuListHidden}`}\n    >\n      <li\n        onClick={handleChangeTheme}\n        data-popup=\"el\"\n        id=\"dark\"\n        className={`${css.menuItem} ${user.theme === 'dark' ? css.activ : ''}`}\n      >\n        {t('dark')}\n      </li>\n      <li\n        onClick={handleChangeTheme}\n        data-popup=\"el\"\n        id=\"light\"\n        className={`${css.menuItem} ${user.theme === 'light' ? css.activ : ''}`}\n      >\n        {t('light')}\n      </li>\n      <li\n        onClick={handleChangeTheme}\n        data-popup=\"el\"\n        id=\"violet\"\n        className={`${css.menuItem} ${\n          user.theme === 'violet' ? css.activ : ''\n        }`}\n      >\n        {t('violet')}\n      </li>\n    </ul>\n  );\n};\n","import css from './ThemeSelect.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { useState } from 'react';\nimport { ThemePopup } from './ThemePopup';\nimport { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n\nexport const ThemeSelect = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  const {t} = useTranslation()\n\n  useEffect(() =>{\n    if((isOpen)){\n      document.body.addEventListener('click', handlePopupClose)\n    }\n    return() => {\n      document.body.removeEventListener('click', handlePopupClose)\n    }\n  })\n\n  const handleOpenPopup = (e) =>{\n    if((e.target.popup === 'menu') || (e.target.popup === 'el')){\n      return\n    }\n    setIsOpen(prev => !prev)  \n  }\n\n  const handlePopupClose = (e) =>{\n    if((e.target.dataset.popup !== 'popupBtn') && (e.target.popup !== 'menu')  && (e.target.popup !== 'el')){\n      setIsOpen(prev => !prev)\n    }\n  }\n\n  const onSelectClose = () =>{\n    setIsOpen(prev => !prev)\n  }\n\n  return (\n    <div data-popup=\"popupBtn\" onClick={(e)=>handleOpenPopup(e)} className={css.menuTheme}>\n      <p data-popup=\"popupBtn\" className={css.titleMenuTheme}>{t('nav.theme')}</p>\n      <button data-popup=\"popupBtn\" className={css.buttonMenu} type=\"button\">\n        <svg data-popup=\"popupBtn\"  className={css.iconChevronDown} width=\"16\" height=\"16\">\n          <use data-popup=\"popupBtn\"  href={`${sprite}#icon-chevron-down`} />\n        </svg>\n      </button>\n      <ThemePopup onSelectClose={onSelectClose} isOpen={isOpen}/>\n    </div>\n  );\n};\n","import css from './Navigation.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openSidebar } from '../../redux/modalSlice';\nimport { UserMenu } from '../UserMenu/UserMenu.jsx';\nimport { ThemeSelect } from '../ThemeSelect/ThemeSelect.jsx';\nimport { HeaderSpinner } from 'components/Spinner';\nimport { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\n\nexport const Navigation = () => {\n  const dispatch = useDispatch()\n  const {i18n} = useTranslation()\n  const isLoading = useSelector(state => state.cards.isLoading)\n  const { sideBarIsOpen } = useSelector(state => state.modal);\n  const [lng, setLng] = useState(\"en\")\n\n  const openMenu =()=>{\n    dispatch(openSidebar())\n    console.log(sideBarIsOpen)\n    \n  }\n\n  const handleLngChange = (language) =>{\n    setLng(language)\n    i18n.changeLanguage(language)\n  }\n  return (\n    <div className={css.navContainer}>\n      <button className={css.buttonBurger} type=\"button\" onClick={openMenu}>\n        <svg className={css.iconBurger} width=\"18\" height=\"18\">\n          <use href={`${sprite}#icon-menu`} />\n        </svg>\n      </button>\n      {isLoading && <div className={css.spinner}><HeaderSpinner ></HeaderSpinner></div>}\n\n      <div className={css.navMenu}>\n      <div className={css.lngWrap}>\n      <svg className={css.iconLng} width=\"15\" height=\"15\">\n          <use href={`${sprite}#icon-lng`} />\n        </svg>\n        <div>\n        <button style={lng === 'en' ? {color: \"white\"}: {}} className={css.lngBtn} onClick={()=>handleLngChange('en')}>En</button>\n        <button style={lng === 'uk' ? {color: \"white\"}: {}} className={css.lngBtn} onClick={()=>handleLngChange('uk')}>Uk</button>\n        </div>\n      </div>\n        <ThemeSelect />\n        <UserMenu />\n      </div>\n      \n    </div>\n  );\n};\n\n\n","import css from './HomePage.module.css';\nimport { Suspense, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { ModalBody } from 'components/Modals/ModalBody';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { DefaultBoard } from 'components/DefaultBoard/DefaultBoard';\nimport { Navigation } from 'components/Navigation/Navigation';\n\nconst HomePage = () => {\n  const { isOpen } = useSelector(state => state.modal);\n  const { theme } = useSelector(state => state.auth.user);\n  const location = useLocation();\n\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('theme');\n    if (!storedTheme) {\n      localStorage.setItem('theme', theme);\n      document.documentElement.setAttribute('data-theme', theme);\n    } else {\n      document.documentElement.setAttribute('data-theme', storedTheme);\n    }\n  }, [theme]);\n\n  return (\n    <div className={css.main}>\n      <Sidebar />\n      <div className={css.mainPage}>\n        <Navigation />\n        {location.pathname === '/home' && <DefaultBoard />}\n        {/* В outlet БУДЕ РЕНДЕРИТИСЯ БОРД */}\n        <Suspense fallback={<div>Loading....</div>}>\n          <Outlet />\n        </Suspense>\n        {isOpen && <ModalBody />}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","export const selectBoards = state => state.boards.boards;\n\nexport const selectCurrentBoard = state => state.boards.currentBoard;\n\nexport const selectIsLoading = state => state.boards.isLoading;\n\nexport const selectError = state => state.boards.error;","export const priorityEnum = [\n    {title: 'Without priority', color: \"#595959\"},\n    {title: 'Low', color: \"#8fa1d0\"},\n    {title: 'Medium', color: \"#e09cb5\"},\n    {title: 'High', color: \"#bedbb0\"}];","var map = {\n\t\"./1.png\": 7919,\n\t\"./10.png\": 9983,\n\t\"./11.png\": 8438,\n\t\"./12.png\": 9645,\n\t\"./13.png\": 8516,\n\t\"./14.png\": 8427,\n\t\"./15.png\": 4274,\n\t\"./16.png\": 857,\n\t\"./2.png\": 1060,\n\t\"./3.png\": 4957,\n\t\"./4.png\": 98,\n\t\"./5.png\": 4923,\n\t\"./6.png\": 6592,\n\t\"./7.png\": 1065,\n\t\"./8.png\": 5198,\n\t\"./9.png\": 7687\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6679;"],"names":["NewBoardForm","dispatch","useDispatch","title","setTitle","useState","iconValue","setIconValue","bgValue","setBgValue","boards","useSelector","state","t","useTranslation","bgValues","i","push","concat","_jsxs","_Fragment","children","_jsx","className","css","formTitle","form","onSubmit","e","preventDefault","find","brd","name","toast","error","newBoard","icon","background","addBoard","target","reset","closeModal","onSubmitForm","htmlFor","autoComplete","placeholder","onChange","value","handleChange","formInput","type","required","iconsForm","iconsTitle","iconsWrap","map","ic","container","handleIconChange","id","checked","checkmark","href","sprite","bgIconsWrap","bg","bgContainer","handleBgChange","bgCheckmark","width","height","src","require","alt","formButton","iconWrap","buttonIcon","EditBoardForm","selectedElId","modal","currentBoard","_id","brdId","updatedBoard","updateBoard","AddColumnForm","currentBoardId","columns","col","postColumn","boardId","EditColumnForm","currentColumn","updateColumn","newColumn","needHelpAction","createAsyncThunk","async","_ref","thunkAPI","email","comment","data","instance","post","body","needHelp","success","rejectWithValue","message","NeedHelpForm","setEmail","setComment","trim","console","log","handleEmailChange","handleCommentChange","commentInput","ImageInput","setFieldValue","useFormikContext","accept","hidden","_e$target$files","file","files","reader","FileReader","onload","result","readAsDataURL","schema","Yup","shape","avatar","test","includes","min","max","matches","password","UserForm","user","selectUser","passwordVisible","setPasswordVisible","image","setPreviewImage","handleClickPasswordVisibility","Formik","initialValues","avatarURL","validationSchema","handleSubmit","values","resetForm","userData","infoUser","formData","FormData","append","createUserDataFormData","updaterUserData","Form","imageUrl","xlinkHref","Field","ErrorMessage","errorMsg","onClick","CustomInputWrapper","forwardRef","ref","Calendar","_ref2","selectedDate","onDateChange","DatePicker","calendarClassName","dayClassName","date","yesterday","Date","setDate","getDate","isDateDisabled","renderCustomHeader","_ref3","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","disabled","format","locale","enGB","selected","dateFormat","today","tomorrow","getMonth","getFullYear","getDateFormat","minDate","weekStartsOn","popoverPlacement","customInput","weekDayClassName","AddCardForm","description","setDescription","priority","setPriority","setSelectedDate","currBoardId","currColumnId","currentColumnId","currColumnCardsLgth","cards","filter","card","columnId","length","from","index","newCard","deadline","getTime","postCard","formInputTitle","handleTitleChange","errMsg","rows","handleDescChange","priorityEnum","pr","handlePriorityChange","style","backgroundColor","color","deadlineStyle","deadlineContainer","EditCardForm","currentCard","cardData","updateCard","WarningList","onDelete","onCancel","onLogout","WarningDell","_selectedElId$title","navigate","useNavigate","allCards","handleDelete","deleteCard","c","forEach","updateColumnId","deleteBoard","deleteColumn","handleCancel","WarningLogout","handleLogout","logoutThunk","ModalBody","modalContent","useLockBodyScroll","firstRender","useRef","useEffect","current","window","addEventListener","handleKeyDown","removeEventListener","code","currentTarget","backdropClose","modalBackdrop","motion","div","animate","y","initial","modalBody","handleBtnClose","closeButton","formWrap","content","handleContent","Board","board","dataset","setCurrentBoardId","closeSidebar","clearColumns","handleEditBoard","openModal","handleWarningBoard","Sidebar","selectBoards","listRef","useAutoAnimate","fetchBoards","sideBarIsOpen","handleCloseSidebar","sidebarBackdrop","sideBar","sideBarOpened","titleBox","iconBox","logoIconContainer","iconLogo","bordBox","bordTitle","buttonBox","buttonText","handleAddBoard","buttonCreate","iconCreate","bordList","helpBox","helpTextBox","imgHelp","srcSet","pot","pot2x","helpText","helpTextLink","handleNeddHelp","buttonHelp","iconHelp","helpButtonText","buttonLogOut","iconLogOut","logOutButtonText","DefaultBoard","handleOpenAddBoardModal","UserMenu","auth","handleUserModalOpen","ThemePopup","onSelectClose","isOpen","handleChangeTheme","updaterUserTheme","theme","selectedTheme","localStorage","setItem","ThemeSelect","setIsOpen","document","handlePopupClose","popup","prev","handleOpenPopup","Navigation","i18n","isLoading","lng","setLng","handleLngChange","language","changeLanguage","openMenu","openSidebar","HeaderSpinner","HomePage","location","useLocation","storedTheme","getItem","documentElement","setAttribute","pathname","Suspense","fallback","Outlet","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","module","exports"],"sourceRoot":""}