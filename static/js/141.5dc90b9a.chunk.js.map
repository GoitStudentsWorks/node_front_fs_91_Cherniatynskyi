{"version":3,"file":"static/js/141.5dc90b9a.chunk.js","mappings":"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","sources":["webpack://task-pro/./src/components/ScreensPage/ScreensPage.module.css?d472","webpack://task-pro/./src/components/dashboard/HeaderDashboard/HeaderDashboard.module.css?4f8c","webpack://task-pro/./src/components/dashboard/Filters/Filters.module.css?4d8b","webpack://task-pro/./src/components/Forms/FiltersForm/FiltersForm.module.css?0d6b","components/Forms/FiltersForm/FiltersForm.jsx","components/dashboard/Filters/Filters.jsx","components/dashboard/HeaderDashboard/HeaderDashboard.jsx","webpack://task-pro/./src/components/dashboard/MainDashboard/MainDashboard.module.css?9d01","webpack://task-pro/./src/components/Column/Column.module.css?790f","components/Column/Column.jsx","webpack://task-pro/./src/components/Card/Card.module.css?4f06","components/Card/ChangeColumn/ChangeColumnPopup.jsx","components/Card/ChangeColumn/ChangeColumnMenu.jsx","components/Card/Card.jsx","components/dashboard/MainDashboard/MainDashboard.jsx","components/ScreensPage/ScreensPage.jsx","redux/board/selectors.js","utils/priorityObject.js","images/card/background-desktop|sync|/^/.//.*@2x/.jpg$"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"screensWrap\":\"ScreensPage_screensWrap__KpiXB\"};","// extracted by mini-css-extract-plugin\nexport default {\"headDashWrap\":\"HeaderDashboard_headDashWrap__-gjPa\",\"dashboardName\":\"HeaderDashboard_dashboardName__GHex9\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuFilterTheme\":\"Filters_menuFilterTheme__ctfu3\",\"filterButton\":\"Filters_filterButton__ZOUmh\",\"filterIcon\":\"Filters_filterIcon__yhbRW\",\"filterIndicator\":\"Filters_filterIndicator__3qzc4\"};","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"FiltersForm_formWrap__p4sxw\",\"menuListHidden\":\"FiltersForm_menuListHidden__VzisA\",\"formTitle\":\"FiltersForm_formTitle__c6RsE\",\"filterLine\":\"FiltersForm_filterLine__aj1e8\",\"iconsForm\":\"FiltersForm_iconsForm__7D3Wa\",\"labelTitle\":\"FiltersForm_labelTitle__lsSuj\",\"iconsTitle\":\"FiltersForm_iconsTitle__BdgCK\",\"iconsAll\":\"FiltersForm_iconsAll__bo9EB\",\"iconsWrap\":\"FiltersForm_iconsWrap__ksC0g\",\"container\":\"FiltersForm_container__Wsogl\",\"iconName\":\"FiltersForm_iconName__8oXr0\",\"checkmark\":\"FiltersForm_checkmark__oO2Ys\"};","import css from './FiltersForm.module.css';\nimport { Formik } from 'formik';\nimport { priorityEnum } from 'utils/priorityObject';\nimport { useDispatch } from 'react-redux';\nimport { setFilterValue, clearFilter } from '../../../redux/filterSlice';\nimport { useTranslation } from 'react-i18next';\n\nexport const FiltersForm = ({ isOpen }) => {\n  const dispatch = useDispatch();\n  const {t} = useTranslation()\n\n  const handleChangeFilter = e => {\n    dispatch(setFilterValue(e.target.value));\n  };\n\n  const handleClearFilter = e => {\n    e.preventDefault();\n    dispatch(clearFilter());\n\n    const radioButtons = document.querySelectorAll('input[type=\"radio\"]');\n    radioButtons.forEach(button => (button.checked = false));\n  };\n  return (\n    <div\n      data-popup=\"menu\"\n      className={`${css.formWrap} ${!isOpen && css.menuListHidden}`}\n    >\n      <h2 className={css.formTitle}>{t('filter')}</h2>\n      <div className={css.filterLine}></div>\n      <Formik\n        initialValues={{\n          priority: 'without',\n        }}\n      >\n        <form className={css.from}>\n          <fieldset className={css.iconsForm}>\n            <div className={css.labelTitle}>\n              <legend className={css.iconsTitle}>{t('form.lbl-color')}</legend>\n              <button\n                onClick={e => handleClearFilter(e)}\n                className={css.iconsAll}\n              >\n                {t('form.all-btn')}\n              </button>\n            </div>\n            <div className={css.iconsWrap}>\n              {priorityEnum.map(pr => {\n                return (\n                  <label key={pr.title} className={css.container}>\n                    <input\n                      type=\"radio\"\n                      name=\"icon\"\n                      value={pr.title}\n                      required\n                      onChange={e => handleChangeFilter(e)}\n                    />\n                    <p className={css.iconName}>{t(`main.priorities.${pr.title}`)}</p>\n                    <span\n                      style={{ backgroundColor: `${pr.color}` }}\n                      className={`${css.checkmark}`}\n                    ></span>\n                  </label>\n                );\n              })}\n            </div>\n          </fieldset>\n        </form>\n      </Formik>\n    </div>\n  );\n};\n","import css from './Filters.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FiltersForm } from 'components/Forms/FiltersForm/FiltersForm';\nimport { priorityEnum } from 'utils/priorityObject';\nimport { useTranslation } from 'react-i18next';\n\nconst Filters = () => {\n  const [isFiltersOpen, setIsFiltersOpen] = useState(false);\n  const filterValue = useSelector(state => state.filter.filterValue)\n  const filterColor = priorityEnum.find(pr => (pr.title === filterValue))\n  const {t} = useTranslation()\n\n  useEffect(() => {\n    if (isFiltersOpen) {\n      document.body.addEventListener('click', handleFiltersClose);\n    }\n    return () => {\n      document.body.removeEventListener('click', handleFiltersClose);\n    };\n  });\n\n  const handleFiltersOpen = e => {\n    if (e.target.popup === 'menu' || e.target.popup === 'el') {\n      return;\n    }\n    setIsFiltersOpen(prev => !prev);\n  };\n\n  const handleFiltersClose = e => {\n    if (\n      e.target.dataset.popup !== 'popupFiltersBtn' &&\n      e.target.dataset.popup !== 'menu' &&\n      e.target.popup !== 'el'\n    ) {\n      setIsFiltersOpen(prev => !prev);\n    }\n  };\n\n  const onFiltersClose = () => {\n    setIsFiltersOpen(prev => !prev);\n  };\n\n  return (\n    <div\n      data-popup=\"popupFiltersBtn\"\n      onClick={e => handleFiltersOpen(e)}\n      className={css.menuFilterTheme}\n    >\n      {filterColor && <div style={{backgroundColor: `${filterColor.color}`}} className={css.filterIndicator}></div>}\n      <button data-popup=\"popupFiltersBtn\" className={css.filterButton}>\n        <svg data-popup=\"popupFiltersBtn\" className={css.filterIcon}>\n          <use data-popup=\"popupFiltersBtn\" href={`${sprite}#icon-filter`} />\n        </svg>\n        {t(\"filter\")}\n      </button>\n      <FiltersForm onSelectClose={onFiltersClose} isOpen={isFiltersOpen} />\n    </div>\n  );\n};\n\nexport default Filters;\n","import css from '../HeaderDashboard/HeaderDashboard.module.css';\nimport Filters from '../Filters/Filters';\n\n\nconst HeaderDashboard = ({ board }) => {\n  return (\n    <div className={css.headDashWrap}>\n      <h2 className={css.dashboardName}>{board?.name}</h2>\n      <Filters />\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","// extracted by mini-css-extract-plugin\nexport default {\"boardWrap\":\"MainDashboard_boardWrap__2u1Ba\",\"columnsList\":\"MainDashboard_columnsList__iP56w\",\"addColumnBtn\":\"MainDashboard_addColumnBtn__6+fG2\",\"addColumnWrap\":\"MainDashboard_addColumnWrap__j-UdJ\",\"addColumnIcon\":\"MainDashboard_addColumnIcon__qVRIe\",\"addColumnTitle\":\"MainDashboard_addColumnTitle__VFj8z\",\"columnList\":\"MainDashboard_columnList__xc8r0\"};","// extracted by mini-css-extract-plugin\nexport default {\"columnWrap\":\"Column_columnWrap__G3hGv\",\"columnTitleWrap\":\"Column_columnTitleWrap__r2jmr\",\"columnTitle\":\"Column_columnTitle__JxUiI\",\"columnBtnWrap\":\"Column_columnBtnWrap__t2MEK\",\"columnButton\":\"Column_columnButton__qAW6n\",\"columnIcon\":\"Column_columnIcon__6CN5T\",\"columnAddButton\":\"Column_columnAddButton__0dcN0\",\"addColumnIcon\":\"Column_addColumnIcon__txMZ3\",\"addColumnTitle\":\"Column_addColumnTitle__mJxvp\"};","import css from './Column.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { openModal } from '../../redux/modalSlice';\n// import { useAutoAnimate } from '@formkit/auto-animate/react'\nimport { useDispatch } from 'react-redux';\nimport { setCurrentColumnId } from '../../redux/column/columnSlice';\nimport { useTranslation } from 'react-i18next';\n\nexport const Column = ({ children, column }) => {\n  const dispatch = useDispatch();\n  const {t} = useTranslation()\n  \n\n  // const [listRef] = useAutoAnimate()\n  const handleAddCard = () => {\n    dispatch(openModal({ content: 'add-card' }));\n    dispatch(setCurrentColumnId(column._id))\n  };\n\n\n  const handleEditColumn = () => {\n    dispatch(openModal({ content: 'edit-column', id:`${column._id}`}));\n  };\n  const handleWarningColumn =()=>{\n    dispatch (openModal({content:'warning-dell', id: column}))\n  }\n  return (\n    <li className={css.columnWrap}>\n      <div>\n        <div className={css.columnTitleWrap}>\n          <h2 className={css.columnTitle}>{column.title}</h2>\n          <div className={css.columnBtnWrap}>\n            <button className={css.columnButton}>\n              <svg onClick={handleEditColumn} className={css.columnIcon}>\n                <use href={`${sprite}#icon-pencil`}></use>\n              </svg>\n            </button>\n            <button onClick={handleWarningColumn} className={css.columnButton}>\n              <svg className={css.columnIcon}>\n                <use href={`${sprite}#icon-trash`}></use>\n              </svg>\n            </button>\n          </div>\n        </div>\n        {children}\n\n        <button onClick={handleAddCard} className={css.columnAddButton}>\n          <svg className={css.addColumnIcon}>\n            <use href={`${sprite}#icon-plus`}></use>\n          </svg>\n          <p className={css.addColumnTitle}>{t(\"main.add-card\")}</p>\n        </button>\n      </div>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cardHeight\":\"Card_cardHeight__tSm4h\",\"cardContainer\":\"Card_cardContainer__aSrje\",\"cardWrapper\":\"Card_cardWrapper__TvahP\",\"cardTitle\":\"Card_cardTitle__4G9aB\",\"cardDiscription\":\"Card_cardDiscription__y7esn\",\"cardFooterWrapper\":\"Card_cardFooterWrapper__lWLCd\",\"cardFooter\":\"Card_cardFooter__bN4q3\",\"cardFooterTitle\":\"Card_cardFooterTitle__EwDak\",\"cardPriorityInfo\":\"Card_cardPriorityInfo__OS-yk\",\"cardPriorityCircle\":\"Card_cardPriorityCircle__Ah0Z+\",\"cardPriorityName\":\"Card_cardPriorityName__PBWEl\",\"cardDeadlineDate\":\"Card_cardDeadlineDate__72wFp\",\"cardIconsList\":\"Card_cardIconsList__ZGvEC\",\"cardIconItemBell\":\"Card_cardIconItemBell__3gB-r\",\"cardSvg\":\"Card_cardSvg__iWUIX\",\"cardIconButton\":\"Card_cardIconButton__s4c7h\",\"cardIconItem\":\"Card_cardIconItem__8AccS\",\"popupMenuList\":\"Card_popupMenuList__s6SOr\",\"popupHidden\":\"Card_popupHidden__AU9tj\",\"popupMenuItem\":\"Card_popupMenuItem__4xTyw\",\"popupMenuDef\":\"Card_popupMenuDef__TjaKT\",\"selectCardSvg\":\"Card_selectCardSvg__wDXPX\"};","import css from '../Card.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { useSelector } from 'react-redux';\n\nexport const ChangeColumnPopup = ({isOpen, handleMove, filterVal}) => {\n    const stateColumns = useSelector(state => state.columns.columns)\n  return (\n        <>\n        {stateColumns.length > 1 ?\n        <ul style={stateColumns.length < 3 ? {marginTop: \"30px\"} : {} }  data-popup=\"changeMenu\" className={`${css.popupMenuList} ${!isOpen && css.popupHidden}`}>\n                {stateColumns.filter(col => col._id !== filterVal).map(col =>{\n                    return(\n                        <li onClick={()=>handleMove(col._id)}  key={col._id} className={`${css.popupMenuItem}`}>\n                            <span className={css.popupMenuText}>{col.title}</span>\n                                <svg className={css.selectCardSvg}>\n                                    <use href={`${sprite}#icon-arrow-in-circle`}/>\n                                </svg>\n                        </li> \n                    )\n                })}         \n            </ul> : <ul style={stateColumns.length < 3 ? {marginTop: \"30px\"} : {} } className={`${css.popupMenuList} ${!isOpen && css.popupHidden}`}>\n                <li className={css.popupMenuDef}><span>No other columns</span>\n                </li>\n            </ul>}\n        </>\n        \n  )\n}\n","import css from '../Card.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { ChangeColumnPopup } from './ChangeColumnPopup';\nimport { useDispatch } from 'react-redux';\nimport { updateColumnId } from '../../../redux/card/cardThunk';\nimport { useSelector } from 'react-redux';\n\nexport const ChangeColumnMenu = ({card}) => {\n  const [isChangeOpen, setIsChangeOpen] = useState(false)\n  const allCards = useSelector(state=> state.cards.cards)\n\n  const dispatch = useDispatch()\n\n\n  useEffect(() =>{\n    if((isChangeOpen)){\n      document.body.addEventListener('click', handlePopupClose)\n    }\n    return() => {\n      document.body.removeEventListener('click', handlePopupClose)\n    }\n  })\n\n  const handleOpenPopup = (e) =>{\n    setIsChangeOpen(prev => !prev)  \n  }\n\n  const handlePopupClose = (e) =>{\n    if((e.target.dataset.popup === \"popupChange\")){\n      return\n    }\n      setIsChangeOpen(prev => !prev)\n  }\n\n  const handleMoveCard = (colId) =>{\n    const currColumnCardsLgth = allCards.filter(card => card.columnId === colId).length\n    dispatch(updateColumnId({id: card._id, columnId: colId, index: currColumnCardsLgth}))\n    const currCards = allCards.filter(c => c.columnId === card.columnId)\n    currCards.forEach(c => {\n      if((c.index < card.index) || (c._id === card._id)){\n        return\n      }\n      dispatch(updateColumnId({id: c._id, columnId: c.columnId, index: c.index - 1}))\n    });\n  }\n\n\n  return (\n    <button data-popup=\"popupChange\" onClick={(e)=>handleOpenPopup(e)} type='button' className={css.cardIconButton}>\n            <svg data-popup=\"popupChange\" className={css.cardSvg}>\n                <use data-popup=\"popupChange\" href={`${sprite}#icon-arrow-in-circle`}/>\n            </svg>\n              <ChangeColumnPopup filterVal={card.columnId} isOpen={isChangeOpen}  handleMove={handleMoveCard}/>       \n    </button>\n  )\n}\n","import css from './Card.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { priorityEnum } from 'utils/priorityObject';\nimport { openModal } from '../../redux/modalSlice';\nimport { ChangeColumnMenu } from './ChangeColumn/ChangeColumnMenu';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { useTranslation } from 'react-i18next';\n\n\nexport const Card = ({card}) =>{\n    const dispatch = useDispatch()\n    const {t} = useTranslation()\n    const priorityColor = priorityEnum.find(pr => pr.title === card.priority)\n \n    let dateNow =new Date();\n    let deadline = new Date(card.deadline);\n    let countdown = deadline-dateNow;\n    const warningTime = 86400000*2;\n\n    const handleEditCard = () =>{\n        dispatch(openModal({content: \"edit-card\", id: `${card._id}`}))\n    }\n  const handleWarningCard =()=>{\n    dispatch (openModal({content:'warning-dell', id: card}))\n  }\n    //Логіка: Дані передаються в компонент з отриманого з бекенду юзера в тому числі додаткові класи; дзвіночок створюється за умови якщо сьогоднішня дата на 1 більша за дату дедлайну; додати функції при кліку на іконки \n    return (\n        <Draggable draggableId={card._id} key={card._id} index={card.index}>\n            {(provided, snapshot) => (\n                <li \n                 className={css.cardHeight}\n                 ref={provided.innerRef}\n                 {...provided.draggableProps}\n                 {...provided.dragHandleProps}\n                 data-dragging={snapshot.isDragging}\n                 >\n                <div style={{backgroundColor: `${priorityColor.color}`}} className={css.cardWrapper}>\n                    <div className= {css.cardContainer}>\n                        <h4 className={css.cardTitle}>{card.title}</h4>\n                        <p className={css.cardDiscription}>{card.description}</p>\n                        <div className={css.cardFooterWrapper}>\n                            <div className={css.cardFooter}>\n                                <div className={css.cardPriority}>\n                                    <h5 className={css.cardFooterTitle}>{t(\"main.card-priority\")}</h5>\n                                    <div className={css.cardPriorityInfo}>\n                                        <div style={{backgroundColor: `${priorityColor.color}`}} className={`${css.cardPriorityCircle}`}></div>\n                                        <p className={css.cardPriorityName}>{t(`main.priorities.${card.priority.split(' ')[0]}`)}</p>\n                                    </div>\n                                </div>\n                                <div className={css.cardDeadline}>\n                                    <h5 className={css.cardFooterTitle}>{t(\"main.card-deadline\")}</h5>\n                                    <p className={css.cardDeadlineDate}>{deadline.toLocaleDateString('en-GB')}</p>\n                                    <p className={css.cardDeadlineDate}>{}</p>\n                                </div>\n                                <ul className={css.cardIconsList}>\n                                   {countdown<warningTime && (<li className={css.cardIconItemBell}>\n                                        <button type='button' className={css.cardIconButton}>\n                                        <svg className={css.cardSvg}>\n                                            <use href={`${sprite}#icon-bell`}/>\n                                        </svg>\n                                        </button>\n                                    </li>)}\n                                    <li className={css.cardIconItem} >\n                                        <ChangeColumnMenu card={card}/>\n                                    </li>\n                                    <li className={css.cardIconItem}>\n                                        <button onClick={e=>handleEditCard(e)} type='button' className={css.cardIconButton}>\n                                        <svg className={css.cardSvg}>\n                                            <use href={`${sprite}#icon-pencil`}/>\n                                        </svg>\n                                        </button>\n                                    </li>\n                                    <li className={css.cardIconItem}>\n                                        <button onClick={handleWarningCard} type='button' className={css.cardIconButton}>\n                                        <svg className={css.cardSvg}>\n                                            <use href={`${sprite}#icon-trash`}/>\n                                        </svg>\n                                        </button>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n    \n                    </div>\n                </div>\n            </li>\n            )}\n\n        </Draggable>\n)}","import css from './MainDashboard.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { Column } from 'components/Column/Column';\nimport { Card } from 'components/Card/Card';\nimport { useEffect } from 'react';\nimport { useAutoAnimate } from '@formkit/auto-animate/react'\nimport { openModal } from '../../../redux/modalSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {getCards} from '../../../redux/card/cardThunk';\nimport {getColumns} from '../../../redux/column/columnThunk';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { updateColumnId } from '../../../redux/card/cardThunk';\nimport { useTranslation } from 'react-i18next';\n\n\nconst MainDashboard = ({ board }) => {\n  const dispatch = useDispatch();\n  const stateColumns = useSelector(state => state.columns.columns)\n  const stateCards = useSelector(state => state.cards.cards)\n  const filterValue = useSelector(state => state.filter.filterValue)\n  const [listRef] = useAutoAnimate()\n  const {t} = useTranslation()\n\n\n  useEffect(() => {\n    if(board){\n      dispatch(getColumns(board._id))\n      dispatch(getCards(board._id))\n    }\n  }, [dispatch, board]);\n\n\n  const handleAddColumn = () => {\n    dispatch(openModal({ content: 'add-column' }));\n  };\n\n\n  const handleDragEnd = (result) =>{\n    const {draggableId, destination, source} = result\n\n    if(!destination){\n      return\n    }\n    \n    if((destination.droppableId === source.droppableId) & (destination.index === source.index)){\n      return\n    }\n\n    if((destination.droppableId === source.droppableId)){\n      dispatch(updateColumnId({id: draggableId, columnId: destination.droppableId, index: destination.index}))\n      const changedCard = stateCards.filter(c => c.columnId === source.droppableId).find(card => card.index === destination.index)\n      dispatch(updateColumnId({id: changedCard._id, columnId: destination.droppableId, index: source.index}))\n      return\n    }\n\n\n    dispatch(updateColumnId({id: draggableId, columnId: destination.droppableId, index: destination.index}))\n    const srcCards = stateCards.filter(c => c.columnId === source.droppableId)\n    const dstnCards = stateCards.filter(c => c.columnId === destination.droppableId)\n\n    srcCards.forEach(c => {\n      if((c.index < source.index) || (c._id === draggableId)){\n        return\n      }\n      dispatch(updateColumnId({id: c._id, columnId: c.columnId, index: c.index - 1}))\n    });\n\n    dstnCards.forEach(c => {\n      if((c.index < destination.index)){\n        return\n      }\n      dispatch(updateColumnId({id: c._id, columnId: c.columnId, index: c.index + 1}))\n    });\n\n  }\n\n  return (\n      <div className={css.boardWrap}>\n      <DragDropContext onDragEnd={handleDragEnd}>\n      <ul className={css.columnsList} ref={listRef}>\n        {stateColumns && stateColumns.map(col => {\n          return (\n            <Column key={col._id} column={col} >\n            <Droppable droppableId={col._id}>\n              {(provided, snapshot) => (\n                  <ul className={css.columnList}\n                   ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    data-dragover={snapshot.isDraggingOver}\n                    >\n                  {stateCards && stateCards\n                  .filter(card => {\n                    if(card.columnId === col._id){\n                      if(filterValue){\n                        return (card.priority === filterValue)\n                      }\n                      return true\n                    }\n                    return false\n                  }).sort(function(a,b){return a.index-b.index})\n                  .map(card => {\n                    return (<Card key={card._id} card={card}/>);\n                  })}\n                  {provided.placeholder}\n                  </ul> \n              \n              )}\n              </Droppable>\n            </Column>\n          );\n        })}\n        <button onClick={handleAddColumn} className={css.addColumnBtn}>\n          <div className={css.addColumnWrap}>\n            <svg className={css.addColumnIcon}>\n              <use href={`${sprite}#icon-plus`}></use>\n            </svg>\n            <p className={css.addColumnTitle}>{t(\"main.add-column\")}</p>\n          </div>\n        </button>\n      </ul>\n      </DragDropContext>\n    </div>\n    \n  );\n};\n\nexport default MainDashboard;\n","import css from './ScreensPage.module.css';\nimport { useParams } from 'react-router-dom';\nimport { selectBoards } from '../../redux/board/selectors';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { setCurrentBoardId } from '../../redux/board/boardSlice';\nimport { useDispatch } from 'react-redux';\n\nimport HeaderDashboard from '../dashboard/HeaderDashboard/HeaderDashboard';\nimport MainDashboard from '../dashboard/MainDashboard/MainDashboard';\n\nconst ScreensPage = () => {\n  const {boardId} = useParams()\n  const boards = useSelector(selectBoards);\n  const currentBoard = boards.find((board) => board._id === boardId)\n  const bgImg = require(`../../images/card/background-desktop/${currentBoard?.background ?? \"2\"}@2x.jpg`)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(setCurrentBoardId(boardId))\n  })\n  \n  return (\n    <div  style={ currentBoard?.background!=='1' ? {backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url(${bgImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\"} : {}} className={css.screensWrap}>\n        <HeaderDashboard board={currentBoard} />\n        <MainDashboard board = {currentBoard} />\n    </div>\n  );\n};\n\nexport default ScreensPage;\n\n// import css from './ScreensPage.module.css';\n\n// import { useLocation, useNavigate, useParams } from 'react-router-dom';\n// import { useEffect, useRef, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n\n// import HeaderDashboard from '../HeaderDashboard/HeaderDashboard';\n// import MainDashboard from '../MainDashboard/MainDashboard';\n\n// import { selectAllDashboards } from '../../redux/dashboard/dashboardsSelectors';\n\n// const ScreensPage = () => {\n//   const [loading, setLoading] = useState(false);\n//   const [currentPageName, setCurrentPageName] = useState('');\n//   const didMount = useRef(true);\n//   const { boardName } = useParams();\n//   const navigate = useNavigate();\n//   const location = useLocation();\n//   const allDashboards = useSelector(selectAllDashboards);\n//   const dispatch = useDispatch();\n//   const [boards, setBoards] = useState(allDashboards);\n\n//   const lookBoard = () => {\n//     const all = allDashboards.filter(dashboard => {\n//       return dashboard.title === boardName;\n//     });\n\n//     return all;\n//   };\n\n//   useEffect(() => {\n//     setCurrentPageName(boardName);\n//   }, [location.pathname, boardName]);\n\n//   useEffect(() => {\n//     setBoards(allDashboards);\n//     if (didMount.current !== true && boardName !== currentPageName) {\n//       return;\n//     }\n//     if (allDashboards.length === 0) {\n//       navigate(`/home`, {\n//         replace: true,\n//       });\n//     }\n//     if (allDashboards.length > 0 && !boardName) {\n//       setLoading(true);\n//       const lastDashboard = allDashboards[allDashboards.length - 1] ?? '';\n//       setCurrentPageName(lastDashboard.title);\n//       navigate(`/home/${lastDashboard.title}`, {\n//         replace: true,\n//         state: { id: lastDashboard._id },\n//       });\n//       setLoading(false);\n//     }\n//     didMount.current = false;\n//   }, [\n//     allDashboards,\n//     navigate,\n//     boardName,\n//     currentPageName,\n//     boards.length,\n//     dispatch,\n//   ]);\n\n//   return (\n//     <div\n//       className={css.test}\n//       $bcgurl={\n//         lookBoard().length > 0 ? lookBoard()[0].backgroundURL : undefined\n//       }\n//     >\n//       {loading ? (\n//         <div>Loading....</div>\n//       ) : (\n//         boardName !== undefined && (\n//           <div>\n//             <HeaderDashboard boardName={boardName} />\n//             <MainDashboard />\n//           </div>\n//         )\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ScreensPage;\n","export const selectBoards = state => state.boards.boards;\n\nexport const selectCurrentBoard = state => state.boards.currentBoard;\n\nexport const selectIsLoading = state => state.boards.isLoading;\n\nexport const selectError = state => state.boards.error;","export const priorityEnum = [\n    {title: 'Without priority', color: \"#595959\"},\n    {title: 'Low', color: \"#8fa1d0\"},\n    {title: 'Medium', color: \"#e09cb5\"},\n    {title: 'High', color: \"#bedbb0\"}];","var map = {\n\t\"./10@2x.jpg\": 1095,\n\t\"./11@2x.jpg\": 4848,\n\t\"./12@2x.jpg\": 25,\n\t\"./13@2x.jpg\": 9898,\n\t\"./14@2x.jpg\": 3843,\n\t\"./15@2x.jpg\": 2652,\n\t\"./16@2x.jpg\": 2773,\n\t\"./1@2x.jpg\": 1763,\n\t\"./2@2x.jpg\": 8374,\n\t\"./3@2x.jpg\": 693,\n\t\"./4@2x.jpg\": 2768,\n\t\"./5@2x.jpg\": 9015,\n\t\"./6@2x.jpg\": 7818,\n\t\"./7@2x.jpg\": 7945,\n\t\"./8@2x.jpg\": 6900,\n\t\"./9@2x.jpg\": 3867\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6917;"],"names":["FiltersForm","_ref","isOpen","dispatch","useDispatch","t","useTranslation","_jsxs","className","concat","css","formWrap","menuListHidden","children","_jsx","formTitle","filterLine","Formik","initialValues","priority","from","iconsForm","labelTitle","iconsTitle","onClick","e","preventDefault","clearFilter","document","querySelectorAll","forEach","button","checked","handleClearFilter","iconsAll","iconsWrap","priorityEnum","map","pr","container","type","name","value","title","required","onChange","setFilterValue","target","handleChangeFilter","iconName","style","backgroundColor","color","checkmark","Filters","isFiltersOpen","setIsFiltersOpen","useState","filterValue","useSelector","state","filter","filterColor","find","useEffect","body","addEventListener","handleFiltersClose","removeEventListener","dataset","popup","prev","handleFiltersOpen","href","sprite","onSelectClose","onFiltersClose","board","Column","column","handleEditColumn","openModal","content","id","_id","handleWarningColumn","handleAddCard","setCurrentColumnId","ChangeColumnPopup","handleMove","filterVal","stateColumns","columns","_Fragment","length","marginTop","popupMenuList","popupHidden","col","popupMenuItem","popupMenuText","selectCardSvg","popupMenuDef","ChangeColumnMenu","card","isChangeOpen","setIsChangeOpen","allCards","cards","handlePopupClose","cardIconButton","cardSvg","columnId","colId","currColumnCardsLgth","updateColumnId","index","c","Card","priorityColor","dateNow","Date","deadline","countdown","handleWarningCard","Draggable","draggableId","provided","snapshot","cardHeight","ref","innerRef","draggableProps","dragHandleProps","isDragging","cardWrapper","cardContainer","cardTitle","cardDiscription","description","cardFooterWrapper","cardFooter","cardPriority","cardFooterTitle","cardPriorityInfo","cardPriorityCircle","cardPriorityName","split","cardDeadline","cardDeadlineDate","toLocaleDateString","cardIconsList","cardIconItemBell","cardIconItem","stateCards","listRef","useAutoAnimate","getColumns","getCards","DragDropContext","onDragEnd","result","destination","source","droppableId","changedCard","srcCards","dstnCards","Droppable","droppableProps","isDraggingOver","sort","a","b","placeholder","handleAddColumn","ScreensPage","_currentBoard$backgro","boardId","useParams","currentBoard","selectBoards","bgImg","require","background","setCurrentBoardId","backgroundImage","backgroundPosition","backgroundSize","HeaderDashboard","MainDashboard","boards","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}